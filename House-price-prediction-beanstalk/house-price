This project focuses on developing and deploying a machine learning-based web 
application for predicting house prices using AWS Elastic Beanstalk. The goal is to create an 
end-to-end solution where users can input property features through a web interface and receive 
an estimated house price generated by a trained machine learning model. The project uses 
Python for backend development, Flask for the web framework, and HTML/CSS for the 
frontend interface. The machine learning component is built using the Scikit-learn library, with 
a Random Forest Regressor as the final predictive model. The dataset used for model training 
includes various features that influence house prices, such as the number of rooms, square 
footage, location details, number of bathrooms, and lot size. The data was cleaned and 
preprocessed through steps including handling missing values, encoding categorical variables, 
and scaling numerical features. Feature selection was performed to identify the most impactful 
variables. 
Several machine learning algorithms were tested, including Linear Regression, 
Decision Trees, and Random Forest. Based on performance metrics such as Mean Absolute 
Error (MAE), Root Mean Square Error (RMSE), and R-squared (RÂ²), the Random Forest 
Regressor showed the best predictive accuracy and was chosen for deployment. The model was 
serialized using joblib to enable integration into a web application. A lightweight web 
application was created using Flask. The frontend allows users to input property details via a 
simple HTML form. These inputs are sent to the backend, where the trained model processes 
them and returns a price prediction, which is then displayed to the user. The interface is clean 
and user-friendly, designed with basic HTML and CSS. 
To make the application accessible online and ensure scalability, it was deployed on 
AWS using Elastic Beanstalk. Elastic Beanstalk simplifies cloud deployment by automating 
server setup, application hosting, and scaling. The deployment involved preparing the project 
directory with a requirements.txt and a Procfile, then uploading it to the AWS Elastic Beanstalk 
environment via the AWS Management Console. This deployment allows the application to be 
available to users over the internet with minimal manual infrastructure management. It 
demonstrates how a machine learning model can be transformed into a usable tool that delivers 
real-time predictions to end-users. The use of AWS Elastic Beanstalk provides an efficient way 
to deploy applications without deep cloud expertise, making it ideal for small to medium-scale 
ML projects. 
In summary, this project combines machine learning, web development, and cloud deployment 
into a functional, real-world application. It showcases the practical application of Random 
Forest in regression problems and highlights the accessibility of ML-powered solutions when 
paired with cloud services. Future improvements could include enhancing the user interface, 
adding data visualization, or incorporating more complex models.
